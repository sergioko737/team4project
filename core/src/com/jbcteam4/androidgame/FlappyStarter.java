package com.jbcteam4.androidgame;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.audio.Music;
import com.jbcteam4.androidgame.loader.MyAssetManager;
import com.jbcteam4.androidgame.views.CreditScreen;
import com.jbcteam4.androidgame.views.LoadingScreen;
import com.jbcteam4.androidgame.views.MainScreen;
import com.jbcteam4.androidgame.views.MenuScreen;
import com.jbcteam4.androidgame.views.PreferencesScreen;


/**
 * Initializes the game. Sets up game environment.
 */
public class FlappyStarter extends Game {

    /**
     * The constant WIDTH.
     */
    public static final int WIDTH = 480;
    /**
     * The constant HEIGHT.
     */
    public static final int HEIGHT = 800;


    private LoadingScreen loadingScreen;
    private PreferencesScreen preferencesScreen;
    private MenuScreen menuScreen;
    private MainScreen mainScreen;
    private AppPreferences preferences;
    private CreditScreen creditScreen;
    /**
     * The Ass man.
     * ^^^^^^^^^^^^This description were generated by Javadoc and left untouched just for fun :)
     */
    public MyAssetManager assMan = new MyAssetManager();

    public Music playingSong;

    public final static int MENU = 0;
    public final static int PREFERENCES = 1;
    public final static int APPLICATION = 2;
    public final static int CREDITS = 3;

    @Override
    public void create() {
        Gdx.graphics.requestRendering();
        loadingScreen = new LoadingScreen(this);
        preferences = new AppPreferences();
        setScreen(loadingScreen);

        // tells our asset manger that we want to load the images set in loadImages method
        assMan.queueAddMusic();
        // tells the asset manager to load the images and wait until finished loading.
        assMan.manager.finishLoading();
        // loads the 2 sounds we use
        playingSong = assMan.manager.get("music.mp3");
        if (AppPreferences.isMusicEnabled()) {
            playingSong.setVolume(AppPreferences.getMusicVolume());
        } else {
            playingSong.setVolume(0);
        }
        playingSong.setLooping(true);
        playingSong.play();

    }

    /**
     * Change the game screens
     *
     * @param screen the screen ref
     */
    public void changeScreen(int screen) {

        switch (screen) {
            case MENU:
                if (menuScreen == null) menuScreen = new MenuScreen(this);
                this.setScreen(menuScreen);
                break;
            case PREFERENCES:
                if (preferencesScreen == null) preferencesScreen = new PreferencesScreen(this);
                this.setScreen(preferencesScreen);
                break;
            case APPLICATION:
                if (mainScreen == null) mainScreen = new MainScreen(this);
                this.setScreen(mainScreen);
                break;
            case CREDITS:
                if (creditScreen == null) creditScreen = new CreditScreen(this);
                this.setScreen(creditScreen);
                break;
        }
    }
    
    @Override
    public void dispose() {
        playingSong.dispose();
        assMan.manager.dispose();
        Gdx.input.setInputProcessor(null);
    }

}
